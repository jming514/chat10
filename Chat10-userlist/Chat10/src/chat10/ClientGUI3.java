/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat10;


import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.sql.Connection;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author Lester
 */
public class ClientGUI3 extends javax.swing.JFrame implements ActionListener {

    private DataInputStream dInput;		
    private DataOutputStream dOutput;	
    JFrame loginFrame=new JFrame("Login");
    JLabel loginLabel=new JLabel("Username:");
    JLabel loginLabel2=new JLabel("Password:");
    
    JTextField loginText=new JTextField(15);
    JTextField loginText2=new JPasswordField(10);
    JButton loginButton = new JButton ("Login");
    JButton registrationButton = new JButton ("Register");
    Connection conn;
    JFrame registrationFrame=new JFrame("Registration");
    JLabel registrationLabel=new JLabel("First Name:");
    JLabel registrationLabel2=new JLabel("Last Name:");
    JLabel registrationLabel3=new JLabel("Username:");
    JLabel registrationLabel4=new JLabel("Password:");
    JTextField registrationText=new JTextField(15);
    JTextField registrationText2=new JTextField(15);
    JTextField registrationText3=new JTextField(15);
    JTextField registrationText4=new JPasswordField(10);
    JButton registerButton = new JButton ("Register");
    
    private Client client;
    private loginDB login;
    private boolean connected;
    private String defaultHost;
    private int defaultPort;
    
    /**
     * Creates new form ClientGUI3
     */
    public ClientGUI3() {
        initComponents();
    }
    
    
    
    void alert(String str) {
        
        if (str.length()<16){
            JOptionPane.showMessageDialog (null, str);
            if (str.equals("User created")==true){
                registerButton.removeActionListener(this);
                registrationFrame.dispose();
            }
              
        }
        
        else if (str.substring(0,16).equals("Successful Login")==true){
            JOptionPane.showMessageDialog (null, str.substring(0,16));
            String uname = str.substring(16,str.length());
            loginFrame.dispose();      
            loginButton.removeActionListener(this);
            client.sendMessage(new ChatMessage(ChatMessage.LOGOUT, ""));
            client = new Client(defaultHost, defaultPort, uname, this);
//            client.sendMessage(new ChatMessage(ChatMessage.WHOISIN, ""));
            chatScreen.setText("");
            userList.setText("");
            loginLogout.setText ("Logout");
                
            if(!client.start()) 
                return;   
             client.sendMessage(new ChatMessage(ChatMessage.WHOISIN, ""));
             //setText("")
        }
        else {
            JOptionPane.showMessageDialog (null, str);
            if (str.equals("Connected as anonymous")==true){
                loginFrame.dispose();
                    }
        }
    }

    void append(String str) {
        chatScreen.append(str);
        chatScreen.setCaretPosition(chatScreen.getText().length() - 1);
    }
    
    void updateUserList(String str){
        if (str.substring(0,1).equals("0")){
            userList.setText("");
        }
        userList.append(str.substring(4,str.length()));
        userList.setCaretPosition(userList.getText().length() - 1);
        
    }
    void connectionFailed() {}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginLogout = new javax.swing.JButton();
        sendButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatScreen = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        userList = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        msgArea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        tfPort = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        tfHost = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginLogout.setText("Login");
        loginLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginLogoutActionPerformed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.setEnabled(false);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        chatScreen.setEditable(false);
        chatScreen.setColumns(20);
        chatScreen.setLineWrap(true);
        chatScreen.setRows(5);
        chatScreen.setWrapStyleWord(true);
        jScrollPane1.setViewportView(chatScreen);

        userList.setEditable(false);
        userList.setColumns(20);
        userList.setLineWrap(true);
        userList.setRows(5);
        userList.setWrapStyleWord(true);
        jScrollPane2.setViewportView(userList);

        msgArea.setColumns(20);
        msgArea.setLineWrap(true);
        msgArea.setRows(5);
        msgArea.setWrapStyleWord(true);
        jScrollPane3.setViewportView(msgArea);

        tfPort.setText("1500");
        jScrollPane4.setViewportView(tfPort);

        tfHost.setText("localhost");
        tfHost.setToolTipText("");
        jScrollPane6.setViewportView(tfHost);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Port");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Server");

        jLabel3.setFont(new java.awt.Font("Open Sans Semibold", 0, 14)); // NOI18N
        jLabel3.setText("CHAT10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 6, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(loginLogout))
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        client.sendMessage(new ChatMessage(ChatMessage.MESSAGE, msgArea.getText()));
        msgArea.setText("");
    }//GEN-LAST:event_sendButtonActionPerformed

    private void loginLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginLogoutActionPerformed
        // TODO add your handling code here:
        if (loginLogout.getText() == "Login") {
            sendButton.setEnabled(true);
            try {   
                loginLogout.setText("Logout");
                msgArea.setEnabled(true);
                
                String uname = "Anonymous";
                defaultHost = tfHost.getText().trim();
                defaultPort = Integer.parseInt(tfPort.getText().trim());

                client = new Client(defaultHost, defaultPort, uname, this);               
                if(!client.start()) 
                    return;
                client.sendMessage(new ChatMessage(ChatMessage.WHOISIN, ""));
                login = new loginDB();
                loginFrame.setSize(300,150);
                loginFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                loginFrame.setVisible(true);
                loginFrame.setLocationRelativeTo(null);
                JPanel p = new JPanel();
                p.add(loginLabel);
                p.add(loginText);
                p.add(loginLabel2);
                p.add(loginText2);
                p.add(loginButton);
                p.add(registrationButton);
                loginFrame.add(p);

                loginButton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e){
                        Connection c = null;
                        Statement stmt = null;
                        String message = loginText.getText().trim().toLowerCase() + ":" +loginText2.getText().trim().toLowerCase();
                        client.sendMessage(new ChatMessage(ChatMessage.LOGIN, message));
                        loginText2.setText("");

                       // loginButton.removeActionListener(this);
                    }
                });

                registrationButton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e){   
                        registrationFrame.setSize(300,300);
                        registrationFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                        registrationFrame.setVisible(true);
                        registrationFrame.setLocationRelativeTo(null);
                        JPanel p = new JPanel();
                        p.add(registrationLabel);
                        p.add(registrationText);
                        p.add(registrationLabel2);
                        p.add(registrationText2);
                        p.add(registrationLabel3);
                        p.add(registrationText3);
                        p.add(registrationLabel4);
                        p.add(registrationText4);
                        p.add(registerButton);
                        registrationFrame.add(p);
                        registerButton.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent e){  
                            if (!registrationText.getText().isEmpty() && !registrationText2.getText().isEmpty()&& !registrationText3.getText().isEmpty() && !registrationText4.getText().isEmpty()){
                                String fname = registrationText.getText().trim().toLowerCase();
                                String lname = registrationText2.getText().trim().toLowerCase();
                                String user = registrationText3.getText().trim().toLowerCase();
                                String pass = registrationText4.getText().trim().toLowerCase();
                                String message = fname +":"+lname+":"+user+":"+pass;
                                client.sendMessage(new ChatMessage(ChatMessage.REGISTER, message)); 

                                registrationFrame.dispose();
                                registrationText.setText("");
                                registrationText2.setText("");
                                registrationText3.setText("");
                                registrationText4.setText("");

                                registerButton.removeActionListener(this);}
                              else{
                            JOptionPane.showMessageDialog (null, "Invalid");
                            //registerButton.removeActionListener(this);
                            }
                            }

                        });
                    }
                });
            } catch (Exception ex) {
                Logger.getLogger(ClientGUI2.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            loginLogout.setText("Login");
            msgArea.setText("");
            msgArea.setEnabled(false);
            sendButton.setEnabled(false);
            client.sendMessage(new ChatMessage(ChatMessage.LOGOUT, ""));
            
            client.sendMessage(new ChatMessage(ChatMessage.WHOISIN, ""));
            
        }
    }//GEN-LAST:event_loginLogoutActionPerformed

    public void actionPerformed(ActionEvent e) {}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea chatScreen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton loginLogout;
    private javax.swing.JTextArea msgArea;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextPane tfHost;
    private javax.swing.JTextPane tfPort;
    private javax.swing.JTextArea userList;
    // End of variables declaration//GEN-END:variables
}
